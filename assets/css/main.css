@charset "UTF-8";
/*! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com*/
*, :after, :before {
  border: 0 solid #e5e7eb;
  box-sizing: border-box;
}

:after, :before {
  --tw-content:"";
}

:host, html {
  line-height: 1.5;
  -webkit-text-size-adjust: 100%;
  font-family: ui-sans-serif, system-ui, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  font-feature-settings: normal;
  font-variation-settings: normal;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-tap-highlight-color: transparent;
}

body {
  line-height: inherit;
  margin: 0;
}

hr {
  border-top-width: 1px;
  color: inherit;
  height: 0;
}

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

h1, h2, h3, h4, h5, h6 {
  font-size: inherit;
  font-weight: inherit;
}

a {
  color: inherit;
  text-decoration: inherit;
}

b, strong {
  font-weight: bolder;
}

code, kbd, pre, samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
  font-feature-settings: normal;
  font-size: 1em;
  font-variation-settings: normal;
}

small {
  font-size: 80%;
}

sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

table {
  border-collapse: collapse;
  border-color: inherit;
  text-indent: 0;
}

button, input, optgroup, select, textarea {
  color: inherit;
  font-family: inherit;
  font-feature-settings: inherit;
  font-size: 100%;
  font-variation-settings: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  margin: 0;
  padding: 0;
}

button, select {
  text-transform: none;
}

button, input:where([type=button]), input:where([type=reset]), input:where([type=submit]) {
  -webkit-appearance: button;
  background-color: transparent;
  background-image: none;
}

:-moz-focusring {
  outline: auto;
}

:-moz-ui-invalid {
  box-shadow: none;
}

progress {
  vertical-align: baseline;
}

::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  height: auto;
}

[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

summary {
  display: list-item;
}

blockquote, dd, dl, figure, h1, h2, h3, h4, h5, h6, hr, p, pre {
  margin: 0;
}

fieldset {
  margin: 0;
}

fieldset, legend {
  padding: 0;
}

menu, ol, ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

dialog {
  padding: 0;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #9ca3af;
  opacity: 1;
}

input::placeholder, textarea::placeholder {
  color: #9ca3af;
  opacity: 1;
}

[role=button], button {
  cursor: pointer;
}

:disabled {
  cursor: default;
}

audio, canvas, embed, iframe, img, object, svg, video {
  display: block;
  vertical-align: middle;
}

img, video {
  height: auto;
  max-width: 100%;
}

[hidden] {
  display: none;
}

@font-face {
  font-display: swap;
  font-family: Inter;
  src: local(Inter), url(/assets/fonts/inter-v18-latin-regular.woff2) format(woff2);
}
*, :after, :before {
  --tw-border-spacing-x:0;
  --tw-border-spacing-y:0;
  --tw-translate-x:0;
  --tw-translate-y:0;
  --tw-rotate:0;
  --tw-skew-x:0;
  --tw-skew-y:0;
  --tw-scale-x:1;
  --tw-scale-y:1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness:proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width:0px;
  --tw-ring-offset-color:#fff;
  --tw-ring-color:rgba(59,130,246,.5);
  --tw-ring-offset-shadow:0 0 #0000;
  --tw-ring-shadow:0 0 #0000;
  --tw-shadow:0 0 #0000;
  --tw-shadow-colored:0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}

::backdrop {
  --tw-border-spacing-x:0;
  --tw-border-spacing-y:0;
  --tw-translate-x:0;
  --tw-translate-y:0;
  --tw-rotate:0;
  --tw-skew-x:0;
  --tw-skew-y:0;
  --tw-scale-x:1;
  --tw-scale-y:1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness:proximity;
  --tw-gradient-from-position: ;
  --tw-gradient-via-position: ;
  --tw-gradient-to-position: ;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width:0px;
  --tw-ring-offset-color:#fff;
  --tw-ring-color:rgba(59,130,246,.5);
  --tw-ring-offset-shadow:0 0 #0000;
  --tw-ring-shadow:0 0 #0000;
  --tw-shadow:0 0 #0000;
  --tw-shadow-colored:0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
  --tw-contain-size: ;
  --tw-contain-layout: ;
  --tw-contain-paint: ;
  --tw-contain-style: ;
}

.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.25em;
  margin-top: 1.25em;
}

.prose :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-bottom: 1.2em;
  margin-top: 1.2em;
}

.prose :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-links);
  font-weight: 500;
  text-decoration: underline;
}

.prose :where(strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: decimal;
  margin-bottom: 1.25em;
  margin-top: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol[type=A]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type=a]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type=A s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type=a s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type=I]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type=i]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type=I s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type=i s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
  list-style-type: disc;
  margin-bottom: 1.25em;
  margin-top: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
  color: var(--tw-prose-counters);
  font-weight: 400;
}

.prose :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.prose :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-bottom: 3em;
  margin-top: 3em;
}

.prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-inline-start-color: var(--tw-prose-quote-borders);
  border-inline-start-width: 0.25rem;
  color: var(--tw-prose-quotes);
  font-style: italic;
  font-weight: 500;
  margin-bottom: 1.6em;
  margin-top: 1.6em;
  padding-inline-start: 1em;
  quotes: "“" "”" "‘" "’";
}

.prose :where(blockquote p:first-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-size: 2.25em;
  font-weight: 800;
  line-height: 1.1111111;
  margin-bottom: 0.8888889em;
  margin-top: 0;
}

.prose :where(h1 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
  font-weight: 900;
}

.prose :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-size: 1.5em;
  font-weight: 700;
  line-height: 1.3333333;
  margin-bottom: 1em;
  margin-top: 2em;
}

.prose :where(h2 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
  font-weight: 800;
}

.prose :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-size: 1.25em;
  font-weight: 600;
  line-height: 1.6;
  margin-bottom: 0.6em;
  margin-top: 1.6em;
}

.prose :where(h3 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
  font-weight: 700;
}

.prose :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  line-height: 1.5;
  margin-bottom: 0.5em;
  margin-top: 1.5em;
}

.prose :where(h4 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
  font-weight: 700;
}

.prose :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
  display: block;
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-radius: 0.3125rem;
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows)/10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows)/10%);
  color: var(--tw-prose-kbd);
  font-family: inherit;
  font-size: 0.875em;
  font-weight: 500;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-top: 0.1875em;
  padding-inline-start: 0.375em;
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-code);
  font-size: 0.875em;
  font-weight: 600;
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
  content: "`";
}

.prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
  content: "`";
}

.prose :where(a code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
  background-color: var(--tw-prose-pre-bg);
  border-radius: 0.375rem;
  color: var(--tw-prose-pre-code);
  font-size: 0.875em;
  font-weight: 400;
  line-height: 1.7142857;
  margin-bottom: 1.7142857em;
  margin-top: 1.7142857em;
  overflow-x: auto;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-top: 0.8571429em;
  padding-inline-start: 1.1428571em;
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  background-color: transparent;
  border-radius: 0;
  border-width: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  line-height: inherit;
  padding: 0;
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
  content: none;
}

.prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
  content: none;
}

.prose :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-bottom: 2em;
  margin-top: 2em;
  table-layout: auto;
  text-align: start;
  width: 100%;
}

.prose :where(thead):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-bottom-color: var(--tw-prose-th-borders);
  border-bottom-width: 1px;
}

.prose :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
  vertical-align: bottom;
}

.prose :where(tbody tr):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-bottom-color: var(--tw-prose-td-borders);
  border-bottom-width: 1px;
}

.prose :where(tbody tr:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~=not-prose], [class~=not-prose] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-top-color: var(--tw-prose-th-borders);
  border-top-width: 1px;
}

.prose :where(tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
  vertical-align: top;
}

.prose :where(figure > *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0;
  margin-top: 0;
}

.prose :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose {
  --tw-prose-body:#374151;
  --tw-prose-headings:#111827;
  --tw-prose-lead:#4b5563;
  --tw-prose-links:#111827;
  --tw-prose-bold:#111827;
  --tw-prose-counters:#6b7280;
  --tw-prose-bullets:#d1d5db;
  --tw-prose-hr:#e5e7eb;
  --tw-prose-quotes:#111827;
  --tw-prose-quote-borders:#e5e7eb;
  --tw-prose-captions:#6b7280;
  --tw-prose-kbd:#111827;
  --tw-prose-kbd-shadows:17 24 39;
  --tw-prose-code:#111827;
  --tw-prose-pre-code:#e5e7eb;
  --tw-prose-pre-bg:#1f2937;
  --tw-prose-th-borders:#d1d5db;
  --tw-prose-td-borders:#e5e7eb;
  --tw-prose-invert-body:#d1d5db;
  --tw-prose-invert-headings:#fff;
  --tw-prose-invert-lead:#9ca3af;
  --tw-prose-invert-links:#fff;
  --tw-prose-invert-bold:#fff;
  --tw-prose-invert-counters:#9ca3af;
  --tw-prose-invert-bullets:#4b5563;
  --tw-prose-invert-hr:#374151;
  --tw-prose-invert-quotes:#f3f4f6;
  --tw-prose-invert-quote-borders:#374151;
  --tw-prose-invert-captions:#9ca3af;
  --tw-prose-invert-kbd:#fff;
  --tw-prose-invert-kbd-shadows:255 255 255;
  --tw-prose-invert-code:#fff;
  --tw-prose-invert-pre-code:#d1d5db;
  --tw-prose-invert-pre-bg:rgba(0,0,0,.5);
  --tw-prose-invert-th-borders:#4b5563;
  --tw-prose-invert-td-borders:#374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(picture > img):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0;
  margin-top: 0;
}

.prose :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0.5em;
  margin-top: 0.5em;
}

.prose :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0.375em;
}

.prose :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.prose :where(.prose > ul > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0.75em;
  margin-top: 0.75em;
}

.prose :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.25em;
  margin-top: 1.25em;
}

.prose :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}

.prose :where(hr + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0;
}

.prose :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-top: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0;
}

.prose :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 2em;
  margin-top: 2em;
}

.prose :where(.prose > :first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0;
}

.prose-sm {
  font-size: 0.875rem;
  line-height: 1.7142857;
}

.prose-sm :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.1428571em;
  margin-top: 1.1428571em;
}

.prose-sm :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-bottom: 0.8888889em;
  margin-top: 0.8888889em;
}

.prose-sm :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.3333333em;
  margin-top: 1.3333333em;
  padding-inline-start: 1.1111111em;
}

.prose-sm :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 2.1428571em;
  line-height: 1.2;
  margin-bottom: 0.8em;
  margin-top: 0;
}

.prose-sm :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 1.4285714em;
  line-height: 1.4;
  margin-bottom: 0.8em;
  margin-top: 1.6em;
}

.prose-sm :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-bottom: 0.4444444em;
  margin-top: 1.5555556em;
}

.prose-sm :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
  line-height: 1.4285714;
  margin-bottom: 0.5714286em;
  margin-top: 1.4285714em;
}

.prose-sm :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.7142857em;
  margin-top: 1.7142857em;
}

.prose-sm :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.7142857em;
  margin-top: 1.7142857em;
}

.prose-sm :where(picture > img):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0;
  margin-top: 0;
}

.prose-sm :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.7142857em;
  margin-top: 1.7142857em;
}

.prose-sm :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-radius: 0.3125rem;
  font-size: 0.8571429em;
  padding-inline-end: 0.3571429em;
  padding-bottom: 0.1428571em;
  padding-top: 0.1428571em;
  padding-inline-start: 0.3571429em;
}

.prose-sm :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.8571429em;
}

.prose-sm :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.9em;
}

.prose-sm :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.8888889em;
}

.prose-sm :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
  border-radius: 0.25rem;
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-bottom: 1.6666667em;
  margin-top: 1.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-top: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.1428571em;
  margin-top: 1.1428571em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.1428571em;
  margin-top: 1.1428571em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0.2857143em;
  margin-top: 0.2857143em;
}

.prose-sm :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0.4285714em;
}

.prose-sm :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0.4285714em;
}

.prose-sm :where(.prose-sm > ul > li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0.5714286em;
  margin-top: 0.5714286em;
}

.prose-sm :where(.prose-sm > ul > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.prose-sm > ul > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.prose-sm > ol > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.prose-sm > ol > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0.5714286em;
  margin-top: 0.5714286em;
}

.prose-sm :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.1428571em;
  margin-top: 1.1428571em;
}

.prose-sm :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0.2857143em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 2.8571429em;
  margin-top: 2.8571429em;
}

.prose-sm :where(hr + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-sm :where(h2 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-sm :where(h3 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-sm :where(h4 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-sm :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.8571429em;
  line-height: 1.5;
}

.prose-sm :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0;
}

.prose-sm :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0;
}

.prose-sm :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-top: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-start: 0;
}

.prose-sm :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  padding-inline-end: 0;
}

.prose-sm :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 1.7142857em;
  margin-top: 1.7142857em;
}

.prose-sm :where(figure > *):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0;
  margin-top: 0;
}

.prose-sm :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}

.prose-sm :where(.prose-sm > :first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-top: 0;
}

.prose-sm :where(.prose-sm > :last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
  margin-bottom: 0;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-10 {
  margin-top: 2.5rem;
}

.mb-10, .my-10 {
  margin-bottom: 2.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.h-6 {
  height: 1.5rem;
}

.h-7 {
  height: 1.75rem;
}

.h-72 {
  height: 18rem;
}

.w-1\/2 {
  width: 50%;
}

.w-6 {
  width: 1.5rem;
}

.w-7 {
  width: 1.75rem;
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}

.w-full {
  width: 100%;
}

.basis-1\/2 {
  flex-basis: 50%;
}

.cursor-pointer {
  cursor: pointer;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.space-x-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse:0;
  margin-left: calc(0px * (1 - var(--tw-space-x-reverse)));
  margin-right: calc(0px * var(--tw-space-x-reverse));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse:0;
  margin-left: calc(0.5rem * (1 - var(--tw-space-x-reverse)));
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
}

.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse:0;
  margin-left: calc(0.75rem * (1 - var(--tw-space-x-reverse)));
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
}

.space-y-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse:0;
  margin-bottom: calc(0px * var(--tw-space-y-reverse));
  margin-top: calc(0px * (1 - var(--tw-space-y-reverse)));
}

.space-y-0\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse:0;
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
  margin-top: calc(0.125rem * (1 - var(--tw-space-y-reverse)));
}

.space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse:0;
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
  margin-top: calc(0.75rem * (1 - var(--tw-space-y-reverse)));
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.bg-blue2-600 {
  --tw-bg-opacity:1;
  background-color: rgb(6 152 255/var(--tw-bg-opacity));
}

.bg-gray-50 {
  --tw-bg-opacity:1;
  background-color: rgb(249 250 251/var(--tw-bg-opacity));
}

.fill-gray-700 {
  fill: #374151;
}

.fill-white {
  fill: #fff;
}

.object-cover {
  -o-object-fit: cover;
  object-fit: cover;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.text-right {
  text-align: right;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.capitalize {
  text-transform: capitalize;
}

.text-blue2-600 {
  --tw-text-opacity:1;
  color: rgb(6 152 255/var(--tw-text-opacity));
}

.text-gray-700 {
  --tw-text-opacity:1;
  color: rgb(55 65 81/var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity:1;
  color: rgb(255 255 255/var(--tw-text-opacity));
}

@media (min-width: 768px) {
  .md\:prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
  }
  .md\:prose :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.25em;
    margin-top: 1.25em;
  }
  .md\:prose :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-bottom: 1.2em;
    margin-top: 1.2em;
  }
  .md\:prose :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-links);
    font-weight: 500;
    text-decoration: underline;
  }
  .md\:prose :where(strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .md\:prose :where(a strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
  }
  .md\:prose :where(blockquote strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
  }
  .md\:prose :where(thead th strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
  }
  .md\:prose :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: decimal;
    margin-bottom: 1.25em;
    margin-top: 1.25em;
    padding-inline-start: 1.625em;
  }
  .md\:prose :where(ol[type=A]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-alpha;
  }
  .md\:prose :where(ol[type=a]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-alpha;
  }
  .md\:prose :where(ol[type=A s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-alpha;
  }
  .md\:prose :where(ol[type=a s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-alpha;
  }
  .md\:prose :where(ol[type=I]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-roman;
  }
  .md\:prose :where(ol[type=i]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-roman;
  }
  .md\:prose :where(ol[type=I s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: upper-roman;
  }
  .md\:prose :where(ol[type=i s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: lower-roman;
  }
  .md\:prose :where(ol[type="1"]):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: decimal;
  }
  .md\:prose :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
    list-style-type: disc;
    margin-bottom: 1.25em;
    margin-top: 1.25em;
    padding-inline-start: 1.625em;
  }
  .md\:prose :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
    color: var(--tw-prose-counters);
    font-weight: 400;
  }
  .md\:prose :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
    color: var(--tw-prose-bullets);
  }
  .md\:prose :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em;
  }
  .md\:prose :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-bottom: 3em;
    margin-top: 3em;
  }
  .md\:prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-inline-start-color: var(--tw-prose-quote-borders);
    border-inline-start-width: 0.25rem;
    color: var(--tw-prose-quotes);
    font-style: italic;
    font-weight: 500;
    margin-bottom: 1.6em;
    margin-top: 1.6em;
    padding-inline-start: 1em;
    quotes: "“" "”" "‘" "’";
  }
  .md\:prose :where(blockquote p:first-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: open-quote;
  }
  .md\:prose :where(blockquote p:last-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: close-quote;
  }
  .md\:prose :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-size: 2.25em;
    font-weight: 800;
    line-height: 1.1111111;
    margin-bottom: 0.8888889em;
    margin-top: 0;
  }
  .md\:prose :where(h1 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-weight: 900;
  }
  .md\:prose :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-size: 1.5em;
    font-weight: 700;
    line-height: 1.3333333;
    margin-bottom: 1em;
    margin-top: 2em;
  }
  .md\:prose :where(h2 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-weight: 800;
  }
  .md\:prose :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-size: 1.25em;
    font-weight: 600;
    line-height: 1.6;
    margin-bottom: 0.6em;
    margin-top: 1.6em;
  }
  .md\:prose :where(h3 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-weight: 700;
  }
  .md\:prose :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    line-height: 1.5;
    margin-bottom: 0.5em;
    margin-top: 1.5em;
  }
  .md\:prose :where(h4 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-weight: 700;
  }
  .md\:prose :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 2em;
    margin-top: 2em;
  }
  .md\:prose :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
    display: block;
    margin-bottom: 2em;
    margin-top: 2em;
  }
  .md\:prose :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 2em;
    margin-top: 2em;
  }
  .md\:prose :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-radius: 0.3125rem;
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows)/10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows)/10%);
    color: var(--tw-prose-kbd);
    font-family: inherit;
    font-size: 0.875em;
    font-weight: 500;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    padding-top: 0.1875em;
    padding-inline-start: 0.375em;
  }
  .md\:prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-code);
    font-size: 0.875em;
    font-weight: 600;
  }
  .md\:prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: "`";
  }
  .md\:prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: "`";
  }
  .md\:prose :where(a code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
  }
  .md\:prose :where(h1 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
  }
  .md\:prose :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-size: 0.875em;
  }
  .md\:prose :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
    font-size: 0.9em;
  }
  .md\:prose :where(h4 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
  }
  .md\:prose :where(blockquote code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
  }
  .md\:prose :where(thead th code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: inherit;
  }
  .md\:prose :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
    background-color: var(--tw-prose-pre-bg);
    border-radius: 0.375rem;
    color: var(--tw-prose-pre-code);
    font-size: 0.875em;
    font-weight: 400;
    line-height: 1.7142857;
    margin-bottom: 1.7142857em;
    margin-top: 1.7142857em;
    overflow-x: auto;
    padding-inline-end: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-top: 0.8571429em;
    padding-inline-start: 1.1428571em;
  }
  .md\:prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)) {
    background-color: transparent;
    border-radius: 0;
    border-width: 0;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    padding: 0;
  }
  .md\:prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):before {
    content: none;
  }
  .md\:prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
    content: none;
  }
  .md\:prose :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-bottom: 2em;
    margin-top: 2em;
    table-layout: auto;
    text-align: start;
    width: 100%;
  }
  .md\:prose :where(thead):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-color: var(--tw-prose-th-borders);
    border-bottom-width: 1px;
  }
  .md\:prose :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
    vertical-align: bottom;
  }
  .md\:prose :where(tbody tr):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-color: var(--tw-prose-td-borders);
    border-bottom-width: 1px;
  }
  .md\:prose :where(tbody tr:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-bottom-width: 0;
  }
  .md\:prose :where(tbody td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    vertical-align: baseline;
  }
  .md\:prose :where(tfoot):not(:where([class~=not-prose], [class~=not-prose] *)) {
    border-top-color: var(--tw-prose-th-borders);
    border-top-width: 1px;
  }
  .md\:prose :where(tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    vertical-align: top;
  }
  .md\:prose :where(figure > *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0;
    margin-top: 0;
  }
  .md\:prose :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }
  .md\:prose {
    --tw-prose-body:#374151;
    --tw-prose-headings:#111827;
    --tw-prose-lead:#4b5563;
    --tw-prose-links:#111827;
    --tw-prose-bold:#111827;
    --tw-prose-counters:#6b7280;
    --tw-prose-bullets:#d1d5db;
    --tw-prose-hr:#e5e7eb;
    --tw-prose-quotes:#111827;
    --tw-prose-quote-borders:#e5e7eb;
    --tw-prose-captions:#6b7280;
    --tw-prose-kbd:#111827;
    --tw-prose-kbd-shadows:17 24 39;
    --tw-prose-code:#111827;
    --tw-prose-pre-code:#e5e7eb;
    --tw-prose-pre-bg:#1f2937;
    --tw-prose-th-borders:#d1d5db;
    --tw-prose-td-borders:#e5e7eb;
    --tw-prose-invert-body:#d1d5db;
    --tw-prose-invert-headings:#fff;
    --tw-prose-invert-lead:#9ca3af;
    --tw-prose-invert-links:#fff;
    --tw-prose-invert-bold:#fff;
    --tw-prose-invert-counters:#9ca3af;
    --tw-prose-invert-bullets:#4b5563;
    --tw-prose-invert-hr:#374151;
    --tw-prose-invert-quotes:#f3f4f6;
    --tw-prose-invert-quote-borders:#374151;
    --tw-prose-invert-captions:#9ca3af;
    --tw-prose-invert-kbd:#fff;
    --tw-prose-invert-kbd-shadows:255 255 255;
    --tw-prose-invert-code:#fff;
    --tw-prose-invert-pre-code:#d1d5db;
    --tw-prose-invert-pre-bg:rgba(0,0,0,.5);
    --tw-prose-invert-th-borders:#4b5563;
    --tw-prose-invert-td-borders:#374151;
    font-size: 1rem;
    line-height: 1.75;
  }
  .md\:prose :where(picture > img):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0;
    margin-top: 0;
  }
  .md\:prose :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0.5em;
    margin-top: 0.5em;
  }
  .md\:prose :where(ol > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0.375em;
  }
  .md\:prose :where(ul > li):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0.375em;
  }
  .md\:prose :where(.md\:prose > ul > li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0.75em;
    margin-top: 0.75em;
  }
  .md\:prose :where(.md\:prose > ul > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em;
  }
  .md\:prose :where(.md\:prose > ul > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.25em;
  }
  .md\:prose :where(.md\:prose > ol > li > p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 1.25em;
  }
  .md\:prose :where(.md\:prose > ol > li > p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.25em;
  }
  .md\:prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0.75em;
    margin-top: 0.75em;
  }
  .md\:prose :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 1.25em;
    margin-top: 1.25em;
  }
  .md\:prose :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }
  .md\:prose :where(hr + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .md\:prose :where(h2 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .md\:prose :where(h3 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .md\:prose :where(h4 + *):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .md\:prose :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0;
  }
  .md\:prose :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0;
  }
  .md\:prose :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-top: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }
  .md\:prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-start: 0;
  }
  .md\:prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    padding-inline-end: 0;
  }
  .md\:prose :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 2em;
    margin-top: 2em;
  }
  .md\:prose :where(.md\:prose > :first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-top: 0;
  }
  .md\:prose :where(.md\:prose > :last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
    margin-bottom: 0;
  }
}
.hover\:bg-blue2-700:hover {
  --tw-bg-opacity:1;
  background-color: rgb(0 132 255/var(--tw-bg-opacity));
}

.hover\:fill-gray-500:hover {
  fill: #6b7280;
}

.hover\:fill-white:hover {
  fill: #fff;
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 rgba(0, 0, 0, 0));
}

.focus\:ring-blue2-500:focus {
  --tw-ring-opacity:1;
  --tw-ring-color:rgb(30 181 255/var(--tw-ring-opacity));
}

.prose-headings\:font-bold :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~=not-prose], [class~=not-prose] *))) {
  font-weight: 700;
}

.prose-headings\:text-gray-700 :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~=not-prose], [class~=not-prose] *))) {
  --tw-text-opacity:1;
  color: rgb(55 65 81/var(--tw-text-opacity));
}

.prose-h2\:mt-0 :is(:where(h2):not(:where([class~=not-prose], [class~=not-prose] *))) {
  margin-top: 0;
}

.prose-h2\:pb-5 :is(:where(h2):not(:where([class~=not-prose], [class~=not-prose] *))) {
  padding-bottom: 1.25rem;
}

.prose-h4\:font-medium :is(:where(h4):not(:where([class~=not-prose], [class~=not-prose] *))) {
  font-weight: 500;
}

.prose-p\:text-lg :is(:where(p):not(:where([class~=not-prose], [class~=not-prose] *))) {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.prose-a\:text-base :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
  font-size: 1rem;
  line-height: 1.5rem;
}

.prose-a\:font-semibold :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
  font-weight: 600;
}

.prose-a\:text-blue2-600 :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
  --tw-text-opacity:1;
  color: rgb(6 152 255/var(--tw-text-opacity));
}

.prose-a\:underline :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
  text-decoration-line: underline;
}

.prose-a\:no-underline :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))) {
  text-decoration-line: none;
}

.hover\:prose-a\:underline :is(:where(a):not(:where([class~=not-prose], [class~=not-prose] *))):hover {
  text-decoration-line: underline;
}

.prose-li\:text-lg :is(:where(li):not(:where([class~=not-prose], [class~=not-prose] *))) {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

@media (min-width: 768px) {
  .md\:mb-0 {
    margin-bottom: 0;
  }
  .md\:mb-20 {
    margin-bottom: 5rem;
  }
  .md\:block {
    display: block;
  }
  .md\:w-3\/4 {
    width: 75%;
  }
  .md\:flex-row {
    flex-direction: row;
  }
  .md\:justify-normal {
    justify-content: normal;
  }
  .md\:space-x-10 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse:0;
    margin-left: calc(2.5rem * (1 - var(--tw-space-x-reverse)));
    margin-right: calc(2.5rem * var(--tw-space-x-reverse));
  }
  .md\:space-x-20 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse:0;
    margin-left: calc(5rem * (1 - var(--tw-space-x-reverse)));
    margin-right: calc(5rem * var(--tw-space-x-reverse));
  }
  .md\:px-0 {
    padding-left: 0;
    padding-right: 0;
  }
}
@media (min-width: 1024px) {
  .lg\:w-1\/2 {
    width: 50%;
  }
  .lg\:w-2\/5 {
    width: 40%;
  }
  .lg\:w-4\/5 {
    width: 80%;
  }
}
@media (min-width: 1280px) {
  .xl\:w-1\/3 {
    width: 33.333333%;
  }
  .xl\:w-2\/3 {
    width: 66.666667%;
  }
}
.dark\:bg-zinc-900:where(.dark, .dark *) {
  --tw-bg-opacity:1;
  background-color: rgb(24 24 27/var(--tw-bg-opacity));
}

.dark\:fill-gray-200:where(.dark, .dark *) {
  fill: #e5e7eb;
}

.dark\:fill-zinc-900:where(.dark, .dark *) {
  fill: #18181b;
}

.dark\:text-gray-200:where(.dark, .dark *) {
  --tw-text-opacity:1;
  color: rgb(229 231 235/var(--tw-text-opacity));
}

.dark\:text-gray-300:where(.dark, .dark *) {
  --tw-text-opacity:1;
  color: rgb(209 213 219/var(--tw-text-opacity));
}

.dark\:hover\:fill-gray-50:hover:where(.dark, .dark *) {
  fill: #f9fafb;
}

.dark\:hover\:fill-zinc-900:hover:where(.dark, .dark *) {
  fill: #18181b;
}

.dark\:prose-headings\:text-gray-200 :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~=not-prose], [class~=not-prose] *))):where(.dark, .dark *) {
  --tw-text-opacity:1;
  color: rgb(229 231 235/var(--tw-text-opacity));
}

.dark\:prose-p\:text-gray-200 :is(:where(p):not(:where([class~=not-prose], [class~=not-prose] *))):where(.dark, .dark *) {
  --tw-text-opacity:1;
  color: rgb(229 231 235/var(--tw-text-opacity));
}

.dark\:prose-ul\:text-gray-200 :is(:where(ul):not(:where([class~=not-prose], [class~=not-prose] *))):where(.dark, .dark *) {
  --tw-text-opacity:1;
  color: rgb(229 231 235/var(--tw-text-opacity));
}

/*# sourceMappingURL=main.css.map */